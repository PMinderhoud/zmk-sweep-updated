#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define HRML(k1,k2,k3,k4) &ht LALT   k1 &ht LCTRL k2  &ht LGUI  k3 &ht LSHIFT k4
#define HRMR(k1,k2,k3,k4) &ht RSHIFT k1 &ht RGUI  k2  &ht RCTRL k3 &ht RALT k4


#define MAC 0
#define RIG 1
#define LEF 2
#define TRI 3

/ {
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <RIG LEF>;
            then-layer = <TRI>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
            &kp Q   &kp W   &kp E   &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O    &kp P
            HRML(A, S,      D,      F)         &kp G          &kp H      HRMR(J,    K,         L,       SEMI)
            &kp Z   &kp X   &kp C   &kp V      &kp B          &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH
                                    &lt LEF TAB  &kp SPACE    &kp BSPC   &lt RIG ENTER
            >;
        };

        right_layer {
            bindings = <
            &kp N1   &kp N2    &kp N3    &kp N4    &kp N5      &none   &none      &none    &none    &none
            &kp N6   &kp N7    &kp N8    &kp N9    &kp N0      &none   &kp LSHIFT &kp LGUI &kp LCTL &kp LALT
            &kp SQT  &kp EQUAL &kp MINUS &kp LBRC  &kp RBRC    &none   &none      &none    &none    &none
                                         &kp BSLH  &kp GRAVE   &trans  &trans
            >;
        };

        left_layer {
            bindings = <
            &none    &none     &none    &none      &none        &none    &kp HOME   &kp UARW   &kp END   &kp PG_UP
            &kp LALT &kp LCTRL &kp LGUI &kp LSHIFT &none        &none    &kp LARW   &kp DARW   &kp RARW  &kp PG_DN
            &none    &none     &none    &none      &none        &none    &none      &none      &none     &none
                                        &trans     &trans       &kp DEL  &kp ESC
            >;
        };

        tri_layer {
            bindings = <
            &bootloader &none     &none     &none     &bt BT_SEL 0     &bt BT_SEL 2  &none  &none  &none  &bootloader
            &none       &none     &none     &none     &bt BT_SEL 1     &bt BT_SEL 3  &none  &none  &none  &none
            &none       &none     &none     &none     &bt BT_CLR       &bt BT_SEL 4  &none  &none  &none  &none
                                            &none     &none            &none         &none
            >;
        };
    };
};
